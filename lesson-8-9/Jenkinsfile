pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    role: jenkins-kaniko
spec:
  serviceAccountName: jenkins-sa
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.16.0-debug
      imagePullPolicy: Always
      command: ["sleep"]
      args: ["99d"]
    - name: git
      image: alpine/git:latest
      imagePullPolicy: IfNotPresent
      command: ["sleep"]
      args: ["99d"]
"""
    }
  }

  environment {
    // Image tag per build
    IMAGE_TAG = "v1.0.${BUILD_NUMBER}"
  }

  stages {
    stage('Build & Push Docker Image') {
      steps {
        container('kaniko') {
          sh '''
            set -eu

            # Discover the ECR repo from the chart values (kept in the repo)
            ECR_REPO="$(grep -E '^ *repository:' lesson-8-9/charts/django-app/values.yaml | awk '{print $2}')"
            [ -n "$ECR_REPO" ] || { echo "ERROR: Could not parse image.repository from values.yaml"; exit 1; }

            echo "Using ECR repository: $ECR_REPO"

            # Build from the Django Dockerfile location
            /kaniko/executor \
              --context "$(pwd)/django" \
              --dockerfile "$(pwd)/django/Dockerfile" \
              --destination="${ECR_REPO}:${IMAGE_TAG}" \
              --destination="${ECR_REPO}:latest" \
              --cache=true
          '''
        }
      }
    }

    stage('Update Chart Tag in Git') {
      steps {
        container('git') {
          withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_PAT')]) {
            sh '''
              set -eu
              REPO_SSH="https://${GITHUB_USER}:${GITHUB_PAT}@github.com/AntonChubarov/goit-microservice-project.git"

              rm -rf repo
              git clone "$REPO_SSH" repo
              cd repo
              git checkout lesson-8-9

              cd lesson-8-9/charts/django-app
              # bump tag only; repository is already kept in sync by deploy.sh bootstrap
              sed -i -E "s#^( *tag:).*#\\1 ${IMAGE_TAG}#" values.yaml

              git config user.email "jenkins@localhost"
              git config user.name "jenkins"
              git add values.yaml
              if git diff --cached --quiet; then
                echo "No changes to commit."
              else
                git commit -m "ci: bump image tag to ${IMAGE_TAG}"
                git push origin lesson-8-9
              fi
            '''
          }
        }
      }
    }
  }
}
