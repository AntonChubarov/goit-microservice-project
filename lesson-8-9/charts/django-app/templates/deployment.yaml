apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: django-app
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: django-app
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: django-app
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}
          {{- if .Values.secrets }}
            - secretRef:
                name: {{ .Release.Name }}-secret
          {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessPath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessPath | default .Values.readinessPath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: {{ .Values.livenessPath | default .Values.readinessPath }}
              port: {{ .Values.containerPort }}
            periodSeconds: 5
            failureThreshold: 24
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
