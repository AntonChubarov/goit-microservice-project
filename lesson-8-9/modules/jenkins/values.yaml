controller:
  # Jenkins controller image tag (keep or adjust as you wish)
  tag: "2.466.1-lts-jdk17"

  # Define executors only once (was duplicated before)
  numExecutors: 0

  # Admin credentials (the chart will create the secret for you)
  admin:
    username: admin
    password: admin123

  serviceType: LoadBalancer

  # Give the controller a bit more RAM so startup is smoother
  resources:
    requests:
      cpu: "200m"
      memory: "1Gi"
    limits:
      cpu: "2"
      memory: "2Gi"

  # Extend the startup probe so Jenkins has up to 10 min to boot
  startupProbe:
    httpGet:
      path: /login
      port: http
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 60   # 60 × 10 s = 10 min

  # Persistence (unchanged)
  persistentVolume:
    enabled: true
    storageClass: "ebs-sc"
    size: 10Gi

  # Plugin list (unchanged)
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - configuration-as-code
    - credentials-binding
    - github
    - docker-workflow
    - job-dsl

  # Use an existing ServiceAccount created elsewhere
  serviceAccount:
    name: jenkins-sa
    create: false

  # ─────────────── Jenkins Configuration as Code ───────────────
  JCasC:
    enabled: true
    defaultConfig: false   # disable the chart’s built-in snippet
    configScripts:
      jenkins-config: |    # key has *no* “.yaml” suffix
        jenkins:
          systemMessage: "Jenkins"
          clouds:
            - kubernetes:
                name: "k8s"
                serverUrl: "https://kubernetes.default.svc"
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                containerCapStr: "10"
                templates: []
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: "github-token"
                      username: "gh"
                      password: "changeme"
                      description: "GitHub PAT"
        jobs:
          - script: >
              pipelineJob('lesson-8-9') {
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/AntonChubarov/goit-microservice-project.git')
                        }
                        branches('lesson-8-9')
                      }
                    }
                    scriptPath('Jenkinsfile')
                  }
                }
                triggers { scm('H/5 * * * *') }
              }
