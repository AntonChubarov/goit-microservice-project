controller:
  image:
    registry: docker.io
    repository: jenkins/jenkins
    tag: lts-jdk17
    pullPolicy: IfNotPresent

  numExecutors: 0

  admin:
    username: admin
    password: admin123

  serviceType: LoadBalancer

  resources:
    requests:
      cpu: "300m"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"

  # Smaller, safer heap for t3.medium/t3.large nodes
  javaOpts: >-
    -Djenkins.install.runSetupWizard=false
    -Xms256m -Xmx1024m
    -XX:+UseG1GC -XX:MaxMetaspaceSize=256m

  # Probes kept generous for first boot (plugins, JCasC)
  startupProbe:
    httpGet:
      path: /login
      port: http
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 180

  livenessProbe:
    httpGet:
      path: /login
      port: http
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 90

  readinessProbe:
    httpGet:
      path: /login
      port: http
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 180

  persistentVolume:
    enabled: true
    storageClass: "ebs-sc"
    size: 10Gi

  # Keep only essentials so first boot is faster
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - configuration-as-code
    - credentials-binding
    - kubernetes-credentials-provider

  serviceAccount:
    name: jenkins-sa
    create: false

  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      jenkins-config: |
        jenkins:
          systemMessage: "Jenkins"
          clouds:
            - kubernetes:
                name: "k8s"
                serverUrl: "https://kubernetes.default.svc"
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                containerCapStr: "10"
                templates: []
        jobs:
          - script: >
              pipelineJob('lesson-8-9') {
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote { url('https://github.com/AntonChubarov/goit-microservice-project.git') }
                        branches('lesson-8-9')
                      }
                    }
                    scriptPath('Jenkinsfile')
                  }
                }
                triggers { scm('H/5 * * * *') }
              }
