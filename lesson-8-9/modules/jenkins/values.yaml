controller:
  image:
    registry: docker.io
    repository: jenkins/jenkins
    tag: lts-jdk17
    pullPolicy: IfNotPresent

  numExecutors: 0

  admin:
    username: admin
    password: admin123

  serviceType: LoadBalancer

  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "2"
      memory: "4Gi"

  javaOpts: >-
    -Djenkins.install.runSetupWizard=false
    -Xms512m -Xmx2048m
    -XX:+UseG1GC -XX:MaxMetaspaceSize=512m

  # NOTE: no startupProbe here on purpose. Jenkins returns 503 on /login while warming up.
  # Keep liveness/readiness but give Jenkins plenty of time on first boot.
  livenessProbe:
    httpGet:
      path: /login
      port: http
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 90

  readinessProbe:
    httpGet:
      path: /login
      port: http
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 180

  persistentVolume:
    enabled: true
    storageClass: "ebs-sc"
    size: 10Gi

  # Keep only the essentials so Jenkins boots faster.
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - configuration-as-code
    - credentials-binding
    - kubernetes-credentials-provider

  serviceAccount:
    name: jenkins-sa
    create: false

  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      jenkins-config: |
        jenkins:
          systemMessage: "Jenkins"
          clouds:
            - kubernetes:
                name: "k8s"
                serverUrl: "https://kubernetes.default.svc"
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                containerCapStr: "10"
                templates: []
        jobs:
          - script: >
              pipelineJob('lesson-8-9') {
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote { url('https://github.com/AntonChubarov/goit-microservice-project.git') }
                        branches('lesson-8-9')
                      }
                    }
                    scriptPath('Jenkinsfile')
                  }
                }
                triggers { scm('H/5 * * * *') }
              }
